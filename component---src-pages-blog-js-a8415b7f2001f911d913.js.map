{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/menu.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_menu__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","gatsby__WEBPACK_IMPORTED_MODULE_4__","BlogPage","_ref","data","a","createElement","title","allMarkdownRemark","edges","map","post","key","node","id","frontmatter","author","date","to","path","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","propTypes","PropTypes","string","defaultProps","Layout","children","query","render","Fragment","header","site","siteMetadata","paddingTop","Date","getFullYear","href","_755544856","isRequired","gatsby__WEBPACK_IMPORTED_MODULE_1__","Menu","listStyle","display","justifyContent","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","arrayOf","object"],"mappings":"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","file":"component---src-pages-blog-js-a8415b7f2001f911d913.js","sourcesContent":["import React from \"react\"\r\nimport Menu from '../components/menu'\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { Link } from \"gatsby\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nconst BlogPage = ({ data }) => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n      <Menu />\r\n      <h1>Latest Posts</h1>\r\n      {data.allMarkdownRemark.edges.map(post => (\r\n        <div key={ post.node.id }>\r\n          <h3>{ post.node.frontmatter.title }</h3>\r\n          <small>Posted by { post.node.frontmatter.author } on { post.node.frontmatter.date }</small>\r\n          <br />\r\n          <br />\r\n          <Link to={ post.node.frontmatter.path }>Read More</Link>\r\n          <br />\r\n          <br />\r\n          <hr />\r\n        </div>\r\n      ))}\r\n  </Layout>\r\n)\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogIndexQuery {\r\n    allMarkdownRemark {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            path\r\n            title\r\n            date\r\n            author\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default BlogPage\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: `rebeccapurple`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            padding: `0px 1.0875rem 1.45rem`,\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          <main>{children}</main>\r\n          <footer>\r\n            Â© {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n          </footer>\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react';\r\nimport { Link } from \"gatsby\";\r\n\r\n//How to create inline styles and utilize the gatsby link components to have single page links.\r\nconst Menu = () => (\r\n  <div style={{\r\n    background: '#f4f4f4',\r\n    paddingTop: '10px'\r\n  }}>\r\n    <ul style={{\r\n      listStyle: 'none',\r\n      display: 'flex',\r\n      justifyContent: 'space-evenly'\r\n    }}>\r\n      <li><Link to=\"/\">Home</Link></li>\r\n      <li><Link to=\"/about\">About</Link></li>\r\n      <li><Link to=\"/services\">Services</Link></li>\r\n      <li><Link to=\"/blog\">Blog</Link></li>\r\n\r\n    </ul>\r\n  </div>\r\n\r\n);\r\n \r\nexport default Menu;","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}